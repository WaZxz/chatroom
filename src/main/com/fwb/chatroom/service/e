//将msg -> MessageFromClient
        MessageFromClient messageFromClient = (MessageFromClient) CommUtils
                .jsonToObject(msg,MessageFromClient.class);
        // 如果是群发
        if (messageFromClient.getType().equals(1)){
            String content = messageFromClient.getMsg();//取得发送内容
            MessageToClient messageToClient = new MessageToClient();
            messageToClient.setContent(content);
            messageToClient.setNames(names);
            //群聊发送
            for (WebSocket webSocket : clients) {
                webSocket.sendMsg(CommUtils.objectToJson(messageToClient));
            }
            //私聊
        }else if (messageFromClient.getType().equals(2)){
            // 私聊信息
            // {"to":"0-1-2-","msg":"33333","type":2}
            // 私聊内容
            String content = messageFromClient.getMsg();
            int toL = messageFromClient.getTo().length();
            String tos[] = messageFromClient.getTo()//发送对象，从开始截取到length — 1，
                    .substring(0,toL-1).split("-");
            List<String> lists = Arrays.asList(tos);
            // 给指定的SessionID发送信息
            for (WebSocket webSocket : clients) {
                //剔除掉本身
                if (lists.contains(webSocket.session.getId()) &&
                        this.session.getId() != webSocket.session.getId()) {
                    // 发送私聊信息
                    MessageToClient messageToClient = new MessageToClient();
                    messageToClient.setContent(userName,content);
                    messageToClient.setNames(names);
                    webSocket.sendMsg(CommUtils.objectToJson(messageToClient));
                }
            }
        }